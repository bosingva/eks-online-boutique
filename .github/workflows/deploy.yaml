name: Infrastructure Deploy

on:
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  terraform_deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    container:
      image: korgala/aws_helm_terra
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    env:               
      TF_VAR_gitops_password: ${{ secrets.GITOPS_PASSWORD }}

    defaults:
      run:
        working-directory: infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}      

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
      
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region $AWS_DEFAULT_REGION \
            --name online-boutique-eks

      - name: Apply ArgoCD Applications
        run: |
          kubectl apply -f online-boutique-argo-app.yaml
          kubectl apply -f platform-argo-app.yaml

      - name: Verify Deployment
        run: |
          echo "Waiting for resources to initialize..."
          sleep 60
          echo "=== ArgoCD Applications ==="
          kubectl get applications -n argocd
          echo "=== Istio Pods ==="
          kubectl get pods -n istio-system
          echo "=== Application Pods ==="
          kubectl get pods -n online-boutique

      - name: Get Access Information
        run: |
          echo "=== Load Balancer URL ==="
          kubectl get svc -n istio-ingress
          echo ""
          echo "=== ArgoCD Admin Password ==="
          echo "Run: kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath='{.data.password}' | base64 --decode"